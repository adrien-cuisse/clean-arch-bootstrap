Escaped mutants:
================

Timed Out mutants:
==================

Skipped mutants:
================

Not Covered mutants:
====================

1) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/InvalidUuidNodeBytesCountException.php:11    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 {
     public function __construct(array $bytes)
     {
-        parent::__construct(sprintf("Expected node to contain 6 bytes, found [%s]", implode(', ', $bytes)));
+        
     }
 }


2) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/InvalidUuidTimeHighBytesCountException.php:11    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 {
     public function __construct(array $bytes)
     {
-        parent::__construct(sprintf("Expected time-high to contain 2 bytes, found [%s]", implode(', ', $bytes)));
+        
     }
 }


3) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/InvalidUuidTimeLowBytesCountException.php:11    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 {
     public function __construct(array $bytes)
     {
-        parent::__construct(sprintf("Expected time-low to contain 4 bytes, found [%s]", implode(', ', $bytes)));
+        
     }
 }


4) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/InvalidUuidTimeMidBytesCountException.php:11    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 {
     public function __construct(array $bytes)
     {
-        parent::__construct(sprintf("Expected time-mid to contain 2 bytes, found [%s]", implode(', ', $bytes)));
+        
     }
 }


5) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/InvalidUuidVersionException.php:11    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 {
     public function __construct(int $version)
     {
-        parent::__construct("Version {$version} is invalid, it may not exceed 15");
+        
     }
 }


6) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:186    [M] PregMatchRemoveCaret

--- Original
+++ New
@@ @@
      */
     protected static function fromString(string $rfcUuidString) : static
     {
-        if (preg_match(pattern: '/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) !== 1) {
+        if (preg_match('/[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) !== 1) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not a valid RFC Uuid string");
         }
         $hexaString = str_replace(search: '-', replace: '', subject: $rfcUuidString);


7) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:186    [M] PregMatchRemoveDollar

--- Original
+++ New
@@ @@
      */
     protected static function fromString(string $rfcUuidString) : static
     {
-        if (preg_match(pattern: '/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) !== 1) {
+        if (preg_match('/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}/', subject: $rfcUuidString) !== 1) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not a valid RFC Uuid string");
         }
         $hexaString = str_replace(search: '-', replace: '', subject: $rfcUuidString);


8) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:186    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     protected static function fromString(string $rfcUuidString) : static
     {
-        if (preg_match(pattern: '/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) !== 1) {
+        if (preg_match(pattern: '/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) !== 2) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not a valid RFC Uuid string");
         }
         $hexaString = str_replace(search: '-', replace: '', subject: $rfcUuidString);


9) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:186    [M] NotIdentical

--- Original
+++ New
@@ @@
      */
     protected static function fromString(string $rfcUuidString) : static
     {
-        if (preg_match(pattern: '/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) !== 1) {
+        if (preg_match(pattern: '/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) === 1) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not a valid RFC Uuid string");
         }
         $hexaString = str_replace(search: '-', replace: '', subject: $rfcUuidString);


10) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:187    [M] Throw_

--- Original
+++ New
@@ @@
     protected static function fromString(string $rfcUuidString) : static
     {
         if (preg_match(pattern: '/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) !== 1) {
-            throw new InvalidArgumentException("The string {$rfcUuidString} is not a valid RFC Uuid string");
+            new InvalidArgumentException("The string {$rfcUuidString} is not a valid RFC Uuid string");
         }
         $hexaString = str_replace(search: '-', replace: '', subject: $rfcUuidString);
         $binaryString = hex2bin(string: $hexaString);


11) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:190    [M] UnwrapStrReplace

--- Original
+++ New
@@ @@
         if (preg_match(pattern: '/^[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}$/', subject: $rfcUuidString) !== 1) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not a valid RFC Uuid string");
         }
-        $hexaString = str_replace(search: '-', replace: '', subject: $rfcUuidString);
+        $hexaString = subject: $rfcUuidString;
         $binaryString = hex2bin(string: $hexaString);
         $bytes = str_split(string: $binaryString);
         $bytes = array_map(callback: fn(string $byte) => ord(character: $byte), array: $bytes);


12) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:194    [M] UnwrapArrayMap

--- Original
+++ New
@@ @@
         $hexaString = str_replace(search: '-', replace: '', subject: $rfcUuidString);
         $binaryString = hex2bin(string: $hexaString);
         $bytes = str_split(string: $binaryString);
-        $bytes = array_map(callback: fn(string $byte) => ord(character: $byte), array: $bytes);
+        $bytes = array: $bytes;
         $instance = (new ReflectionClass(static::class))->newInstanceWithoutConstructor();
         if ($instance->getVersion() != $rfcUuidString[14]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");


13) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:201    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $bytes = str_split(string: $binaryString);
         $bytes = array_map(callback: fn(string $byte) => ord(character: $byte), array: $bytes);
         $instance = (new ReflectionClass(static::class))->newInstanceWithoutConstructor();
-        if ($instance->getVersion() != $rfcUuidString[14]) {
+        if ($instance->getVersion() != $rfcUuidString[13]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);


14) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:201    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $bytes = str_split(string: $binaryString);
         $bytes = array_map(callback: fn(string $byte) => ord(character: $byte), array: $bytes);
         $instance = (new ReflectionClass(static::class))->newInstanceWithoutConstructor();
-        if ($instance->getVersion() != $rfcUuidString[14]) {
+        if ($instance->getVersion() != $rfcUuidString[15]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);


15) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:201    [M] NotEqual

--- Original
+++ New
@@ @@
         $bytes = str_split(string: $binaryString);
         $bytes = array_map(callback: fn(string $byte) => ord(character: $byte), array: $bytes);
         $instance = (new ReflectionClass(static::class))->newInstanceWithoutConstructor();
-        if ($instance->getVersion() != $rfcUuidString[14]) {
+        if ($instance->getVersion() == $rfcUuidString[14]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);


16) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:202    [M] Throw_

--- Original
+++ New
@@ @@
         $bytes = array_map(callback: fn(string $byte) => ord(character: $byte), array: $bytes);
         $instance = (new ReflectionClass(static::class))->newInstanceWithoutConstructor();
         if ($instance->getVersion() != $rfcUuidString[14]) {
-            throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
+            new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);


17) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:205    [M] DecrementInteger

--- Original
+++ New
@@ @@
         if ($instance->getVersion() != $rfcUuidString[14]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
-        $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
+        $instance->timeLowBytes = array_slice(array: $bytes, offset: -1, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;


18) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:205    [M] IncrementInteger

--- Original
+++ New
@@ @@
         if ($instance->getVersion() != $rfcUuidString[14]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
-        $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
+        $instance->timeLowBytes = array_slice(array: $bytes, offset: 1, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;


19) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:205    [M] DecrementInteger

--- Original
+++ New
@@ @@
         if ($instance->getVersion() != $rfcUuidString[14]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
-        $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
+        $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 3);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;


20) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:205    [M] IncrementInteger

--- Original
+++ New
@@ @@
         if ($instance->getVersion() != $rfcUuidString[14]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
-        $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
+        $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 5);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;


21) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:205    [M] UnwrapArraySlice

--- Original
+++ New
@@ @@
         if ($instance->getVersion() != $rfcUuidString[14]) {
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
-        $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
+        $instance->timeLowBytes = array: $bytes;
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;


22) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:206    [M] DecrementInteger

--- Original
+++ New
@@ @@
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
-        $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
+        $instance->timeMidBytes = array_slice(array: $bytes, offset: 3, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);


23) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:206    [M] IncrementInteger

--- Original
+++ New
@@ @@
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
-        $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
+        $instance->timeMidBytes = array_slice(array: $bytes, offset: 5, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);


24) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:206    [M] DecrementInteger

--- Original
+++ New
@@ @@
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
-        $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
+        $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 1);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);


25) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:206    [M] IncrementInteger

--- Original
+++ New
@@ @@
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
-        $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
+        $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 3);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);


26) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:206    [M] UnwrapArraySlice

--- Original
+++ New
@@ @@
             throw new InvalidArgumentException("The string {$rfcUuidString} is not an UuidV{$instance->getVersion()} string");
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
-        $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
+        $instance->timeMidBytes = array: $bytes;
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);


27) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:208    [M] DecrementInteger

--- Original
+++ New
@@ @@
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
-        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
+        $instance->versionBits = ($bytes[5] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;


28) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:208    [M] IncrementInteger

--- Original
+++ New
@@ @@
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
-        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
+        $instance->versionBits = ($bytes[7] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;


29) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:208    [M] BitwiseAnd

--- Original
+++ New
@@ @@
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
-        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
+        $instance->versionBits = ($bytes[6] | self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;


30) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:208    [M] DecrementInteger

--- Original
+++ New
@@ @@
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
-        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
+        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 3;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;


31) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:208    [M] IncrementInteger

--- Original
+++ New
@@ @@
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
-        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
+        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 5;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;


32) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:208    [M] ShiftRight

--- Original
+++ New
@@ @@
         }
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
-        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
+        $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) << 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;


33) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:209    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
-        $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
+        $bytes[5] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];


34) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:209    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
-        $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
+        $bytes[7] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];


35) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:209    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
-        $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
+        $bytes[6] = $bytes[5] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];


36) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:209    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
-        $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
+        $bytes[6] = $bytes[7] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];


37) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:209    [M] BitwiseAnd

--- Original
+++ New
@@ @@
         $instance->timeLowBytes = array_slice(array: $bytes, offset: 0, length: 4);
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
-        $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
+        $bytes[6] = $bytes[6] | self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];


38) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:211    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
-        $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
+        $instance->timeHighBytes = array_slice(array: $bytes, offset: 5, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];


39) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:211    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
-        $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
+        $instance->timeHighBytes = array_slice(array: $bytes, offset: 7, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];


40) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:211    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
-        $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
+        $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 1);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];


41) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:211    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
-        $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
+        $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 3);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];


42) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:211    [M] UnwrapArraySlice

--- Original
+++ New
@@ @@
         $instance->timeMidBytes = array_slice(array: $bytes, offset: 4, length: 2);
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
-        $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
+        $instance->timeHighBytes = array: $bytes;
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];


43) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:213    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
-        $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
+        $bytes[7] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);


44) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:213    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
-        $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
+        $bytes[9] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);


45) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:213    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
-        $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
+        $bytes[8] = $bytes[7] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);


46) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:213    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
-        $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
+        $bytes[8] = $bytes[9] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);


47) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:213    [M] BitwiseAnd

--- Original
+++ New
@@ @@
         $instance->versionBits = ($bytes[6] & self::HIGHEST_4_BITS_MASK) >> 4;
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
-        $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
+        $bytes[8] = $bytes[8] | self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);


48) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:215    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
-        $instance->clockSeqHighBits = $bytes[8];
+        $instance->clockSeqHighBits = $bytes[7];
         $instance->clockSeqLowByte = $bytes[9];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
         return $instance;


49) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:215    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $bytes[6] = $bytes[6] & self::LOWEST_4_BITS_MASK;
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
-        $instance->clockSeqHighBits = $bytes[8];
+        $instance->clockSeqHighBits = $bytes[9];
         $instance->clockSeqLowByte = $bytes[9];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
         return $instance;


50) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:216    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
-        $instance->clockSeqLowByte = $bytes[9];
+        $instance->clockSeqLowByte = $bytes[8];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
         return $instance;
     }


51) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:216    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $instance->timeHighBytes = array_slice(array: $bytes, offset: 6, length: 2);
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
-        $instance->clockSeqLowByte = $bytes[9];
+        $instance->clockSeqLowByte = $bytes[10];
         $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
         return $instance;
     }


52) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:218    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
-        $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
+        $instance->nodeBytes = array_slice(array: $bytes, offset: 9, length: 6);
         return $instance;
     }
     /**


53) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:218    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
-        $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
+        $instance->nodeBytes = array_slice(array: $bytes, offset: 11, length: 6);
         return $instance;
     }
     /**


54) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:218    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
-        $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
+        $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 5);
         return $instance;
     }
     /**


55) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:218    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
-        $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
+        $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 7);
         return $instance;
     }
     /**


56) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:218    [M] UnwrapArraySlice

--- Original
+++ New
@@ @@
         $bytes[8] = $bytes[8] & self::CLOCK_SEQ_HIGH_MASK;
         $instance->clockSeqHighBits = $bytes[8];
         $instance->clockSeqLowByte = $bytes[9];
-        $instance->nodeBytes = array_slice(array: $bytes, offset: 10, length: 6);
+        $instance->nodeBytes = array: $bytes;
         return $instance;
     }
     /**


57) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:234    [M] UnwrapArrayMap

--- Original
+++ New
@@ @@
     protected final function randomBytes(int $numberOfBytes) : array
     {
         $binaryString = random_bytes(length: $numberOfBytes);
-        return array_map(callback: fn(string $ascii) => ord(character: $ascii) & self::BYTE_MASK, array: str_split($binaryString));
+        return array: str_split($binaryString);
     }
     /**
      * Removes overflowing bits from the given value


58) /home/arch/src/web-project/clean-arch-example/Domain/Fields/Identity/Uuid.php:235    [M] BitwiseAnd

--- Original
+++ New
@@ @@
     protected final function randomBytes(int $numberOfBytes) : array
     {
         $binaryString = random_bytes(length: $numberOfBytes);
-        return array_map(callback: fn(string $ascii) => ord(character: $ascii) & self::BYTE_MASK, array: str_split($binaryString));
+        return array_map(callback: fn(string $ascii) => ord(character: $ascii) | self::BYTE_MASK, array: str_split($binaryString));
     }
     /**
      * Removes overflowing bits from the given value
